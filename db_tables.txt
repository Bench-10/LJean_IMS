create table Branch (
	branch_id int primary key,
	branch_name varchar(255) not null,
	address varchar(255) not null
);

insert into Branch (branch_id, branch_name, address) values(2, 'L-Jean Trading', 'Balagtas, Batangas');
insert into Branch (branch_id, branch_name, address) values(2, 'Vinseth Trading', 'Banaba South, Batangas');
insert into Branch (branch_id, branch_name, address) values(3, 'MaraJean Trading', 'Libjo Central, Batangas');
insert into Branch (branch_id, branch_name, address) values(4, 'El Jean Construction Supply', 'San Antonio San Pascual, Batangas');
insert into Branch (branch_id, branch_name, address) values(5, 'Cams Trading', 'Mababang Ludlod Taal, Batangas');
insert into Branch (branch_id, branch_name, address) values(6, 'Seth and L-Jean Trading', 'Banay-Banay San Jose, Batangas');





create table Users (
	user_id int primary key,
	branch_id int not null,
	role varchar(255) not null,
	first_name varchar(255) not null,
	last_name varchar(255) not null,
	cell_number varchar(255) not null,
	foreign key(branch_id) references Branch(branch_id)	
);

INSERT INTO users(user_id, branch_id, role, first_name, last_name, cell_number) VALUES
(1, 1, 'Inventory Staff', 'Cathy', 'Portillo', '09674529545'),
(2, 2, 'Inventory Staff', 'Nicole', 'Lacsamana', '09674836545'),
(3, 3, 'Inventory Staff', 'Louise', 'Ordunia', '09605621545'),
(5, 1, 'Branch Manager', 'Bench', 'Dela Luna', '09674529545');





create table Login_Credentials (
	user_id int,
	username varchar(255) not null,
	password varchar(255) not null,
	foreign key(user_id) references Users(user_id) on delete cascade
);





create table Category (
	category_id serial primary key,
	category_name varchar(255) not null
);





create table Inventory_Product(
	product_id serial primary key,
	category_id int not null,
	branch_id int not null,
	product_name varchar(255) not null,
	unit varchar(15) not null,
	unit_price  decimal(10,2) not null,
	unit_cost  decimal(10,2) not null,
	quantity int not null,
	threshold int not null,
	foreign key(category_id) references Category(category_id),
	foreign key(branch_id) references Branch(branch_id)
);





create table Add_Stocks(
	add_id serial primary key,
	product_id int not null,
	h_unit_price decimal(10,2) not null,
	h_unit_cost decimal(10,2) not null,
	quantity_added int not null,
	date_added date not null,
	product_validity date not null,
	foreign key(product_id) references Inventory_Product(product_id)
);





create table Inventory_Alerts(
	alert_id serial primary key,
	product_id int,
	branch_id int,
	alert_type varchar(100),
	message varchar(255),
	alert_date timestamp default NOW(),
	foreign key(product_id) references Inventory_Product(product_id),
	foreign key(branch_id) references Branch(branch_id)
);





create table Inventory_Alerts(
	alert_id serial primary key,
	product_id int,
	branch_id int,
	alert_type varchar(100),
	message varchar(255),
	banner_color varchar(25),
	alert_date timestamp default NOW(),
	foreign key(product_id) references Inventory_Product(product_id),
	foreign key(branch_id) references Branch(branch_id)
);
